buildscript {
    repositories {
        maven {
            name = "mavenForge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "JitPack"
            url = "https://jitpack.io/"
        }
    }
    dependencies {
        classpath "com.github.asbyth:ForgeGradle:8708bf3e01"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
version = "1.2.0-PRE3"
group= "tools.skyblock.skyhouse.mcmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Skyhouse"

runClient {
    def props = new Properties()
    file("login.properties").withInputStream { props.load(it) }
    String accessToken = props.getProperty("accessToken")
    String uuid = props.getProperty("uuid")
    String userType = props.getProperty("userType")
    String username = props.getProperty("username")
    boolean dcevm = "true".equals(props.getProperty("dcevm"))
    String javaagent = props.getProperty("javaagent")
    String authType, authValue
    if (accessToken == null) {
        authType = "--password"
        authValue = props.getProperty("password")
    } else {
        authType = "--accessToken"
        authValue = accessToken
    }
    if (dcevm) {
        jvmArgs(['-Xmx3G', '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5010', '-XXaltjvm=dcevm', '-XX:+UnlockExperimentalVMOptions', '-javaagent:'+javaagent])
    }
    args = ["--userType", userType, "--uuid", uuid, "--username", username, authType, authValue]
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    repositories {

    }
    mappings = "stable_22"
}

dependencies {

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
